#!/bin/bash

: ${MYDOMAIN:=mycorp.kom}
: ${IMAGE:=sequenceiq/serf}
: ${DOCKER_OPTS:="--dns 127.0.0.1 -p 7373 -p 7946"}

serf-settings() {
  cat <<EOF
  FIRST_IP=$FIRST_IP
  MYDOMAIN=$MYDOMAIN
  IMAGE=$IMAGE
  DOCKER_OPTS=$DOCKER_OPTS
EOF
}

serf-start-first() {
  FIRST=$(docker run -d $DOCKER_OPTS --name node0 -h node0.$MYDOMAIN $IMAGE)
  FIRST_IP=$(docker inspect --format="{{.NetworkSettings.IPAddress}}" $FIRST)
  echo FIRST_IP=$FIRST_IP
}

serf-start-slave() {
  : ${FIRST_IP:?"FIRST_IP is needed"}
  NUMBER=${1:?"please give a <NUMBER> parameter it will be used as node<NUMBER>"}
  docker run -d -e JOIN_IP=$FIRST_IP $DOCKER_OPTS --name node$NUMBER -h node${NUMBER}.$MYDOMAIN $IMAGE
}

serf-start-cluster() {
  NUM_OF_NODES=${1:-2}
  echo starting $NUM_OF_NODES docker container

  serf-start-first
  for i in $(seq $((NUM_OF_NODES - 1))); do
    serf-start-slave $i
  done
}

# starts a serf container, joins to cluster, and starts a bash
serf-test-instance() {
  docker run -i -t --rm $DOCKER_OPTS --name node99 -h node99.$MYDOMAIN -e JOIN_IP=$FIRST_IP  sequenceiq/serf bash -c '(nohup /etc/serf/start-serf-agent.sh &) && /bin/bash'
}


alias serf-reload-functions=". serf-functions"
